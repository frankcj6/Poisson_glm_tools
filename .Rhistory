# Variable Effect IRR(risk ratio/risk ration Interpretation)
# This function returns risk ratio coefficient for variable
# with 95% confidence interval and Pr(>|z|)
Possion_IRR<- function(possion_model){
Results<- summary(possion_model)
IRR_list<- exp(Results$coefficients[,1])
lower<- Results$coefficients[,1]-2*Results$coefficients[,2]
upper<- Results$coefficients[,1]+2*Results$coefficients[,2]
lower_bound<- exp(lower)
upper_bound<- exp(upper)
z_value<- Results$coefficient[,3]
Pr<- Results$coefficients[,4]
output<- as.data.frame(cbind(IRR_list,z_value,Pr,lower_bound,upper_bound))
names(output)<- c('IRR','z value','Pr(>|z|)','lower_bound(95% CI)','upper_bound(95% CI)')
return(output)
}
#Poisson lambda value prediction
#This function returns the predicted lamda value of each variable given
#a dataframe and the possion regression model
Preidct_Lambda<- function(df,poisson_model){
library(dplyr)
Results<- summary(poisson_model)
Coef<- Results$coefficients[,1]
Variable_list<- rownames(as.data.frame(Coef))
Variable_list<- as.data.frame(Variable_list[2:length(Variable_list)])
variable_name<- as.character(Variable_list[,1])
df_matrix<- as.matrix(df %>% select(variable_name))
result_matrix<- df_matrix %*% Coef[2:nrow(as.data.frame(Coef))]
result_df<- as.data.frame(result_matrix)
result_df$Intercept<- as.matrix(Coef)[1]
output<- rowSums(result_df)
output<- exp(output)
output<- as.data.frame(output)
colnames(output)<- 'Predicted_Lambda'
return(output)
}
#Predict Probability of outcome variable
#This function returns the probability of the outcome variable
#at the value of input under poisson distribution
#Note that default is a one-tailed function
Predict_Prob<- function(value,lambda){
for (i in 1:value){
if (value==0){
result<- 1
} else{
result<- 1
result<- result*i
}
}
lambda<- as.matrix(lambda)
pr<- (lambda^value)*(exp(-lambda)/result)
pr<- as.data.frame(pr)
colnames(pr)<- 'Predicted_Probability'
return(pr)
}
devtools::document()
#' Variable Effect IRR(risk ratio/risk ration Interpretation)
#' This function returns risk ratio coefficient for variable
#' with 95% confidence interval and Pr(>|z|)
#' @param possion_model A fitted possion regression model using glm
#' @return A dataframe that contains the IRR, z value, p-value, and 95% confidence interval for the IRR.
#' @export
Possion_IRR<- function(possion_model){
Results<- summary(possion_model)
IRR_list<- exp(Results$coefficients[,1])
lower<- Results$coefficients[,1]-2*Results$coefficients[,2]
upper<- Results$coefficients[,1]+2*Results$coefficients[,2]
lower_bound<- exp(lower)
upper_bound<- exp(upper)
z_value<- Results$coefficient[,3]
Pr<- Results$coefficients[,4]
output<- as.data.frame(cbind(IRR_list,z_value,Pr,lower_bound,upper_bound))
names(output)<- c('IRR','z value','Pr(>|z|)','lower_bound(95% CI)','upper_bound(95% CI)')
return(output)
}
devtools::document()
document()
library(devtools)
library(roxygen2)
document()
document()
set('..')
sewd('..')
setwd('..')
document()
devtools::document()
#' Predict Probability of outcome variable
#' This function returns the probability of the outcome variable
#' at the value of input under poisson distribution
#' Note that default is a one-tailed function
#' @param value input expected value of outcome variable
#' @param lambda input vector space of predicted lambda
#' @return return a vector space of predicted probability according to
#' @return poisson distribution
#' @export
Predict_Prob<- function(value,lambda){
for (i in 1:value){
if (value==0){
result<- 1
} else{
result<- 1
result<- result*i
}
}
lambda<- as.matrix(lambda)
pr<- (lambda^value)*(exp(-lambda)/result)
pr<- as.data.frame(pr)
colnames(pr)<- 'Predicted_Probability'
return(pr)
}
devtools::document()
devtools::document()
setwd('./Poissonglm')
document()
document()
document()
#' Variable Effect IRR risk ratio/risk ration Interpretation
#' This function returns risk ratio coefficient for variable
#' with 95 percent confidence interval and Pr>|z|
#' @param possion_model A fitted possion regression model using glm
#' @return A dataframe that contains the IRR, z value, p-value, and 95 percent confidence interval for the IRR.
#' @export
#'
Possion_IRR<- function(possion_model){
Results<- summary(possion_model)
IRR_list<- exp(Results$coefficients[,1])
lower<- Results$coefficients[,1]-2*Results$coefficients[,2]
upper<- Results$coefficients[,1]+2*Results$coefficients[,2]
lower_bound<- exp(lower)
upper_bound<- exp(upper)
z_value<- Results$coefficient[,3]
Pr<- Results$coefficients[,4]
output<- as.data.frame(cbind(IRR_list,z_value,Pr,lower_bound,upper_bound))
names(output)<- c('IRR','z value','Pr(>|z|)','lower_bound(95% CI)','upper_bound(95% CI)')
return(output)
}
devtools::document()
devtools::document()
devtools::document()
devtools::install_github('frankcj6/Poisson_glm_tools')
library(Poissonglm)
getAnywhere(brm)
getAnywhere(predict)
getAnywhere(predict.glm())
devtools::document()
